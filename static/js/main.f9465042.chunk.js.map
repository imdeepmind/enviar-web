{"version":3,"sources":["app/router/login/components/hero.js","app/router/login/components/loginForm.js","app/router/login/components/registerForm.js","app/router/login/components/modal.js","constants/actions.js","app/redux/auth/action.js","app/router/login/index.js","app/router/home/index.js","app/router/e404/index.js","app/redux/auth/reducer.js","app/redux/reducers.js","app/redux/auth/saga.js","constants/endpoints.js","app/redux/sagas.js","app/redux/store.js","App.js","serviceWorker.js","index.js"],"names":["styleHero","background","height","width","Hero","props","react_default","a","createElement","className","style","Row","Col","xs","lg","onClick","loginMethod","registerMethod","OwnInput","field","react","Input","Object","assign","input","meta","touched","error","reduxForm","form","handleSubmit","console","log","Form","onSubmit","Field","name","component","type","validate","required","length","min","max","placeholder","authReducer","Button","color","genderOptions","label","value","CustomSelect","react_select_esm","onChange","onBlur","options","email","myError","MyModal","Modal","isOpen","toggle","ModalHeader","ModalBody","loginForm","registerForm","data","ModalFooter","LOGIN_USER","REGISTER_USER","LOGOUT_USER","loginUserSuccess","user","payload","loginUserError","registerUserSuccess","registerUserError","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleLoginModal","setState","prevState","loginModal","toggleRegisterModal","registerModal","onLogin","loginUser","history","onRegister","registerUser","state","hero","modal","Component","connect","Home","e404","INIT_STATE","localStorage","getItem","loading","combineReducers","formReducer","arguments","undefined","action","objectSpread","registerAccount","loginAccount","logout","watchRegisterUser","watchLoginUser","watchLogoutUser","rootSaga","registerAccountAsync","_ref","asyncToGenerator","regenerator_default","mark","_callee","username","password","country","gender","dob","wrap","_context","prev","next","abrupt","axios","post","ENDPOINT","stop","_x","_x2","_x3","_x4","_x5","_x6","_x7","apply","_ref2","_payload$user","_context2","sent","put","t0","push","response","message","_marked","loginAccountAsync","_ref3","_callee2","_context3","_x8","_x9","_ref4","_payload$user2","msg","_context4","setItem","token","_marked2","logoutAsync","_ref5","_callee3","_context5","_x10","_ref6","_context6","removeItem","_marked3","_context7","takeEvery","_marked4","_context8","_marked5","_context9","_marked6","_context10","all","fork","_marked7","getState","authSagas","sagas_marked","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","mySaga","ReallySmoothScroll","shim","baseUrl","process","PrivateRoute","rest","objectWithoutProperties","auth","react_router","render","to","App","es","store","react_router_dom","basename","path","exact","App_PrivateRoute","E404","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9465042.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst styleHero = {\n    'background' : 'linear-gradient(to right, #4A00E0, #8E2DE2)',\n    'height'     : '100vh',\n    'width'      : '100%' \n}\n\nconst Hero = (props) => {\n    return (\n        <div className=\"d-flex align-items-start justify-content-center flex-column p-5\" style={styleHero}>\n            <Row>\n                <Col xs=\"12\" lg=\"6\">\n                    <h1 className=\"display-3 text-white\">enviar</h1>\n                    <h2 className=\"text-light\">a open source social network that respects your privacy and private data</h2>\n                    <p className=\"text-light\">\n                        please <b className=\"cursor-pointer\" onClick={props.loginMethod}>login</b>{\" \"}or{\" \"}\n                        <b className=\"cursor-pointer\" onClick={props.registerMethod}>register</b> to continue\n                    </p>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Hero;","import React, { Fragment } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, length } from 'redux-form-validators'\nimport { connect } from 'react-redux';\nimport {\n    Form,\n    Input,\n    Button,\n} from 'reactstrap';\n\nlet OwnInput = (field) => (\n    <Fragment>\n        <Input {...field.input}  {...field} />\n        {\n            field.meta.touched && field.meta.error &&\n            <span className=\"has-error text-danger\">{field.meta.error}</span>\n        }\n    </Fragment>\n)\n\nlet LoginUser = (props) => {\n    const { handleSubmit } = props;\n    console.log(props);\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Field name=\"username\" component={OwnInput} type=\"text\" validate={[required(), length({ min: 4, max: 24 })]} placeholder=\"Username\" />\n            <Field name=\"password\" component={OwnInput} type=\"password\" validate={[required(), length({ min: 4, max: 24 })]} placeholder=\"Password\" />\n            {props.authReducer ? <p className=\"text-danger text-center\">{props.authReducer.error}</p> : \"\"}\n            <Button color=\"primary\" className=\"w-100\" type=\"submit\">Login</Button>\n        </Form>\n    )\n}\n\nexport default reduxForm({\n    form: 'LoginUser'\n})(LoginUser)","import React, { Fragment } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, email } from 'redux-form-validators';\nimport Select from 'react-select';\nimport {\n    Form,\n    Input,\n    Button,\n} from 'reactstrap';\n\nconst genderOptions = [\n    {\n        \"label\" : \"Male\",\n        \"value\" : \"m\",\n    },\n    {\n        \"label\" : \"Female\",\n        \"value\" : \"f\",\n    },\n    {\n        \"label\" : \"Other\",\n        \"value\" : \"o\"\n    }\n];\n\nlet OwnInput = (field) => (\n    <Fragment>\n        <Input {...field.input}  {...field} />\n        {\n            field.meta.touched && field.meta.error &&\n            <span className=\"has-error text-danger\">{field.meta.error}</span>\n        }\n    </Fragment>\n)\n\nlet CustomSelect = (props) =>\n    <Fragment>\n        <Select\n            className=\"form-control\"\n            {...props}\n            onChange={(value) => props.input.onChange(value)}\n            onBlur={() => props.input.onBlur(props.input.value)}\n            options={props.options}\n            value={props.input.value}\n        />\n        {\n            props.meta.touched && props.meta.error &&\n            <span className=\"has-error text-danger\">{props.meta.error}</span>\n        }\n    </Fragment>\n\nlet RegisterUser = (props) => {\n    console.log(props)\n    const { handleSubmit } = props;\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Field name=\"name\" component={OwnInput} type=\"text\" validate={[required()]} placeholder=\"Name\" />\n            <Field name=\"email\" component={OwnInput} type=\"email\" validate={[required(), email()]} placeholder=\"Email\" />\n            <Field name=\"username\" component={OwnInput} type=\"text\" validate={[required()]} placeholder=\"Username\" />\n            <Field name=\"password\" component={OwnInput} type=\"password\" validate={[required()]} placeholder=\"Password\" />\n            <Field name=\"conformPassword\" component={OwnInput} type=\"password\" validate={[required()]} placeholder=\"Password again\" />\n            <Field name=\"country\" component={OwnInput} type=\"text\" validate={[required()]} placeholder=\"Country\"/>\n            <Field name=\"gender\" component={CustomSelect} type=\"text\" validate={[required()]} placeholder=\"Gender\" options={genderOptions} />\n            <Field name=\"dob\" component={OwnInput} type=\"date\" validate={[required()]} placeholder=\"Date of Birth\" />\n            {props.myError ? <p className=\"text-danger text-center\">{props.myError.error}</p> : \"\"}\n            <Button color=\"primary\" className=\"w-100\" type=\"submit\">Register</Button>\n        </Form>\n    )\n}\n\nexport default reduxForm({\n    form: 'RegisterUser'\n})(RegisterUser)","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport LoginForm from './loginForm';\nimport RegisterForm from './registerForm';\n\nconst MyModal = props => {\n    return (\n        <Modal isOpen={props.isOpen} toggle={props.toggle}>\n            <ModalHeader toggle={props.toggle} className=\"text-capitalize\">{props.type}</ModalHeader>\n            <ModalBody>\n                {props.type === 'login' ? <LoginForm onSubmit={props.onSubmit} myError={props.error ? props.error : null}/> : <RegisterForm onSubmit={data => props.onSubmit(data)} myError={props.error ? props.error : null}/>}\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"secondary\" onClick={props.toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default MyModal;","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_ERROR = 'LOGIN_USER_ERROR';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR';\nexport const LOGOUT_USER = 'LOGOUT_USER';","import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_ERROR,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_ERROR\n  } from '../../../constants/actions';\n\nexport const loginUser = (user, history) => ({\n    type: LOGIN_USER,\n    payload: { user, history }\n});\nexport const loginUserSuccess = (user) => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n});\n\nexport const loginUserError = (error) => ({\n    type: LOGIN_USER_ERROR,\n    payload: error\n})\n\nexport const registerUser = (user, history) => ({\n    type: REGISTER_USER,\n    payload: { user, history }\n})\nexport const registerUserSuccess = (user) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n})\n\nexport const registerUserError = (error) => ({\n    type: REGISTER_USER_ERROR,\n    payload: error\n})\n\nexport const logoutUser = (history) => ({\n    type: LOGOUT_USER,\n    payload : {history}\n});","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Hero from './components/hero';\nimport Modal from './components/modal';\n\nimport { loginUser, registerUser } from '../../redux/actions';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loginModal: false,\n            registerModal: false\n        }\n    }\n\n    toggleLoginModal = () => {\n        this.setState(prevState => ({\n            loginModal: !prevState.loginModal\n        }));\n    }\n\n    toggleRegisterModal = () => {\n        this.setState(prevState => ({\n            registerModal: !prevState.registerModal\n        }));\n    }\n\n    onLogin = data => {\n        this.props.loginUser(data, this.props.history);\n    }\n\n    onRegister = data => {\n        this.props.registerUser(data, this.props.history);\n    }\n    render(){\n        console.log('props', this.props);\n        return (\n            <Fragment>\n                <Hero registerMethod={this.toggleRegisterModal} loginMethod={this.toggleLoginModal}/>\n                <Modal isOpen={this.state.loginModal} toggle={this.toggleLoginModal} type=\"login\" onSubmit={this.onLogin} error={this.props.authReducer ? this.props.authReducer : null}/> \n                <Modal isOpen={this.state.registerModal} toggle={this.toggleRegisterModal} type=\"register\" onSubmit={this.onRegister} error={this.props.authReducer ? this.props.authReducer : null}/> \n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => state;\n  \nexport default connect(\n    mapStateToProps,\n    {\n        loginUser,\n        registerUser\n    }\n)(Login);","import React from 'react';\n\nconst Home = (props) => {\n    return (\n        <h1>Home Page</h1>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst e404 = (props) => {\n    return (\n        <h1>e404 Page</h1>\n    )\n}\n\nexport default e404;","import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_ERROR,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_ERROR,\n    LOGOUT_USER\n} from '../../../constants/actions';\n\nconst INIT_STATE = {\n    user: localStorage.getItem('user'),\n    loading: false\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, loading: false, user: action.payload };\n        case LOGIN_USER_ERROR:\n            return { ...state, loading: false, error: action.payload};\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, loading: false, user: action.payload };\n        case REGISTER_USER_ERROR:\n            return { ...state, loading: false, error: action.payload};\n        case LOGOUT_USER:\n            return { ...state ,user:null};\n        default: return { ...state };\n    }\n}","import { combineReducers } from \"redux\";\n\nimport { reducer as formReducer} from 'redux-form';\n\nimport authReducer from './auth/reducer';\n\nexport default combineReducers({\n    form: formReducer,\n    authReducer\n});","import axios from 'axios';\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { LOGIN, REGISTER } from '../../../constants/endpoints';\nimport {\n    REGISTER_USER,\n    LOGIN_USER,\n    LOGOUT_USER,\n} from '../../../constants/actions';\n\nimport {\n    loginUserError,\n    loginUserSuccess,\n    registerUserError,\n    registerUserSuccess\n} from './action';\n\nconst registerAccountAsync = async (name, email, username, password, country, gender, dob) => {\n    const data = {\n        name: name,\n        email: email,\n        username: username,\n        password: password,\n        country: country,\n        gender: gender.value,\n        dob: dob,\n    }\n    return axios.post(REGISTER, data);\n}\n\nfunction* registerAccount({ payload }) {    \n    try {\n        const { name, email, username, password, country, gender, dob } = payload.user;\n        const registerUser = yield call(registerAccountAsync, name, email, username, password, country, gender, dob);\n        yield put(registerUserSuccess(registerUser.data));\n    } catch (error) {\n        payload.history.push('/login');\n        yield put(registerUserError(error.response.data.message));\n    }\n}\n\nconst loginAccountAsync = async (username, password) => {\n    const data = {\n        username : username,\n        password : password\n    };\n    return axios.post(LOGIN, data);\n}\n\nfunction* loginAccount({ payload }) {    \n    try {\n        const { username, password } = payload.user;\n        const loginUser = yield call(loginAccountAsync, username, password);\n        localStorage.setItem('user', loginUser.data.token);\n        payload.history.push('/');\n        yield put(loginUserSuccess(loginUser.data));\n    } catch (error) {\n        let msg = error.response ? error.response.data.message : error;\n        yield put(loginUserError(msg));\n    }\n}\n\nconst logoutAsync = async (history) => {\n    history.push('/')\n}\n\nfunction* logout({payload}) {\n    const { history } = payload\n    try {\n        yield call(logoutAsync,history);\n        localStorage.removeItem('user');\n    } catch (error) {\n    }\n}\n\nexport function* watchRegisterUser() {\n    yield takeEvery(REGISTER_USER, registerAccount);\n}\n\nexport function* watchLoginUser() {\n    yield takeEvery(LOGIN_USER, loginAccount);\n}\n\nexport function* watchLogoutUser() {\n    yield takeEvery(LOGOUT_USER, logout);\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(watchRegisterUser),\n        fork(watchLoginUser),\n        fork(watchLogoutUser),\n    ]);\n}","export const ENDPOINT = \"http://localhost:5111/api/v1/\"\n\n// AUTH\nexport const LOGIN = ENDPOINT + \"auth/login/\";\nexport const REGISTER = ENDPOINT + 'auth/register/';\n","import { all } from 'redux-saga/effects';\n\nimport authSagas from './auth/saga';\n\nexport default function* rootSaga(getState) {\n  yield all([\n    authSagas(),\n  ]);\n}\n  ","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"./reducers\";\nimport mySaga from \"./sagas\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\nexport default createStore(reducer, applyMiddleware(sagaMiddleware));\n\n// then run the saga\nsagaMiddleware.run(mySaga);","import React from 'react';\nimport ReallySmoothScroll from 'really-smooth-scroll';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\n\nimport Login from './app/router/login';\nimport Home from './app/router/home';\nimport E404 from './app/router/e404';\n\nimport store from './app/redux/store';\n\nReallySmoothScroll.shim();\nconst baseUrl = process.env.PUBLIC_URL;\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  let auth = localStorage.getItem('user');\n  return (\n    <Route {...rest} render={(props) => (\n      auth\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )} />\n  )\n}\n\nfunction App() {\n  return (\n    <Provider store={store} >\n        <Router basename={baseUrl}>\n        <div className=\"App\">\n          <Switch>\n            <Route path={'/login'} exact component={Login} />\n            <PrivateRoute path={'/'} exact component={Home} />\n            <Route component={E404} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/theme.scss';\nimport './assets/css/main.css';\nimport './assets/css/classes.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}